<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         id="WebApp_ID" version="3.0">

    <!-- 配置contextConfigLocation初始化参数 -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:com/smart/housekeeper/resources/spring/applicationContext.xml</param-value>
    </context-param>

    <!--
        ContextLoaderListener：Spring MVC在Web容器中的启动类，负责Spring IoC容器在Web上下文中的初始化。
        Web容器调用contextInitialized方法初始化ContextLoaderListener，在此方法中，ContextLoaderListener通过调用继承自ContextLoader的initWebApplicationContext方法实例化Spring Ioc容器。
        读取web.xml中通过contextConfigLocation标签指定的XML文件，实例化XML文件中配置的bean
     -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- [静态资源映射]:第三种方式:不能访问WEB-INF目录下的静态资源-->
    <!-- 激活Tomcat的defaultServlet来处理静态文件,性能最佳,
         写在DispatcherServlet的前面,让defaultServlet先拦截-->
    <!--<servlet-mapping>-->
    <!--<servlet-name>default</servlet-name>-->
    <!--<url-pattern>*.html</url-pattern>-->
    <!--</servlet-mapping>-->

    <!-- 小服务程序 -->
    <servlet>
        <!-- 默认情况下：spring-mvc框架的配置文件必须叫<servlet-name>-servlet.xml，且必须放在WebRoot/WEB-INF/目录下 自定义路径除外-->
        <servlet-name>mvc-dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!-- 自定义路径,名称另当别论 -->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:com/smart/housekeeper/resources/spring/applicationContext-mvc.xml</param-value>
        </init-param>
        <!-- 表示启动容器时初始化该Servlet -->
        <load-on-startup>1</load-on-startup>
    </servlet>

    <!-- 映射关系,代表该url由哪一个servlet处理 -->
    <servlet-mapping>
        <servlet-name>mvc-dispatcher</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
</web-app>